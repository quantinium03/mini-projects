// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: user.sql

package database

import (
	"context"
	"time"
)

const getUserHash = `-- name: GetUserHash :one
select userhash from user where username = ?
`

func (q *Queries) GetUserHash(ctx context.Context, username string) (string, error) {
	row := q.db.QueryRowContext(ctx, getUserHash, username)
	var userhash string
	err := row.Scan(&userhash)
	return userhash, err
}

const insertUser = `-- name: InsertUser :one
insert into user (username, userhash, updatedAt, createdAt) values (?, ?, ?, ?) returning id, username, userhash, updatedat, createdat
`

type InsertUserParams struct {
	Username  string
	Userhash  string
	Updatedat time.Time
	Createdat time.Time
}

func (q *Queries) InsertUser(ctx context.Context, arg InsertUserParams) (User, error) {
	row := q.db.QueryRowContext(ctx, insertUser,
		arg.Username,
		arg.Userhash,
		arg.Updatedat,
		arg.Createdat,
	)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Username,
		&i.Userhash,
		&i.Updatedat,
		&i.Createdat,
	)
	return i, err
}
